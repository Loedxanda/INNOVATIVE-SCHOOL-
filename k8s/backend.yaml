apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: innovative-school
data:
  DATABASE_URL: "postgresql://postgres:secure_password_here@postgres-service:5432/innovative_school"
  REDIS_URL: "redis://redis-service:6379/0"
  ENVIRONMENT: "production"
  CORS_ORIGINS: "https://innovativeschool.cm,https://www.innovativeschool.cm"

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: innovative-school
type: Opaque
data:
  SECRET_KEY: c2VjdXJlX3NlY3JldF9rZXlfaGVyZQ==  # base64 encoded
  JWT_SECRET_KEY: c2VjdXJlX2p3dF9zZWNyZXRfa2V5X2hlcmU=  # base64 encoded
  GOOGLE_MAPS_API_KEY: eW91cl9nb29nbGVfbWFwc19hcGlfa2V5X2hlcmU=  # base64 encoded
  AWS_ACCESS_KEY_ID: eW91cl9hd3NfYWNjZXNzX2tleV9pZF9oZXJl  # base64 encoded
  AWS_SECRET_ACCESS_KEY: eW91cl9hd3Nfc2VjcmV0X2FjY2Vzc19rZXlfaGVyZQ==  # base64 encoded

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: innovative-school
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-username/innovative-school-backend:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: innovative-school
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: innovative-school
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

